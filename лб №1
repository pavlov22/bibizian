{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOjhC7EyCKb1La6Zjy23bDx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pavlov22/bibizian/blob/main/%D0%BB%D0%B1%20%E2%84%961\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V9EKjYj4dyKy",
        "outputId": "e5946f32-d5b5-443c-9828-ef95b888f7cb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "[1] Слова, які зустрічаються більше 3 разів:\n",
            "['python']\n",
            "\n",
            "[2] Продукти, де кількість менше 5:\n",
            "['хліб', 'кефір']\n",
            "\n",
            "[3] Дохід по кожному продукту:\n",
            "яблуко: 800 грн\n",
            "молоко: 600 грн\n",
            "хліб: 250 грн\n",
            "кефір: 500 грн\n",
            "\n",
            "Продукти з доходом більше 1000 грн:\n",
            "[]\n",
            "\n",
            "[4] Задачі зі статусом 'очікує':\n",
            "['Написати документацію']\n",
            "\n",
            "[5] Користувача 'ivan123' зареєстровано.\n",
            "\n",
            "Аутентифікація успішна. Ласкаво просимо, Іван Петренко!\n",
            "\n",
            "Невірний логін або пароль.\n"
          ]
        }
      ],
      "source": [
        "import hashlib\n",
        "\n",
        "# ================================\n",
        "# 1. Робота з текстом\n",
        "# ================================\n",
        "\n",
        "def word_count(text):\n",
        "    words = text.split()\n",
        "    word_freq = {}\n",
        "\n",
        "    for word in words:\n",
        "        word = word.lower().strip('.,!?()[]{}\"\\'')\n",
        "        if word:\n",
        "            word_freq[word] = word_freq.get(word, 0) + 1\n",
        "\n",
        "    frequent_words = [word for word, count in word_freq.items() if count > 3]\n",
        "\n",
        "    print(\"\\n[1] Слова, які зустрічаються більше 3 разів:\")\n",
        "    print(frequent_words)\n",
        "    return word_freq\n",
        "\n",
        "\n",
        "# ================================\n",
        "# 2. Інвентаризація продуктів\n",
        "# ================================\n",
        "\n",
        "inventory = {\n",
        "    \"яблуко\": 10,\n",
        "    \"банан\": 3,\n",
        "    \"молоко\": 7,\n",
        "    \"хліб\": 2\n",
        "}\n",
        "\n",
        "def add_product(name, quantity):\n",
        "    inventory[name] = inventory.get(name, 0) + quantity\n",
        "\n",
        "def remove_product(name):\n",
        "    if name in inventory:\n",
        "        del inventory[name]\n",
        "\n",
        "def low_stock_products():\n",
        "    low_stock = [name for name, qty in inventory.items() if qty < 5]\n",
        "    print(\"\\n[2] Продукти, де кількість менше 5:\")\n",
        "    print(low_stock)\n",
        "    return low_stock\n",
        "\n",
        "\n",
        "# ================================\n",
        "# 3. Статистика продажів\n",
        "# ================================\n",
        "\n",
        "sales = [\n",
        "    {\"продукт\": \"яблуко\", \"кількість\": 50, \"ціна\": 10},\n",
        "    {\"продукт\": \"молоко\", \"кількість\": 20, \"ціна\": 30},\n",
        "    {\"продукт\": \"хліб\", \"кількість\": 10, \"ціна\": 25},\n",
        "    {\"продукт\": \"яблуко\", \"кількість\": 30, \"ціна\": 10},\n",
        "    {\"продукт\": \"кефір\", \"кількість\": 100, \"ціна\": 5}\n",
        "]\n",
        "\n",
        "def calculate_total_revenue(sales_list):\n",
        "    revenue_by_product = {}\n",
        "    for sale in sales_list:\n",
        "        product = sale[\"продукт\"]\n",
        "        revenue = sale[\"кількість\"] * sale[\"ціна\"]\n",
        "        revenue_by_product[product] = revenue_by_product.get(product, 0) + revenue\n",
        "\n",
        "    print(\"\\n[3] Дохід по кожному продукту:\")\n",
        "    for product, revenue in revenue_by_product.items():\n",
        "        print(f\"{product}: {revenue} грн\")\n",
        "\n",
        "    return revenue_by_product\n",
        "\n",
        "def high_revenue_products(revenue_dict, threshold=1000):\n",
        "    high_revenue = [product for product, revenue in revenue_dict.items() if revenue > threshold]\n",
        "    print(f\"\\nПродукти з доходом більше {threshold} грн:\")\n",
        "    print(high_revenue)\n",
        "    return high_revenue\n",
        "\n",
        "\n",
        "# ================================\n",
        "# 4. Система управління задачами\n",
        "# ================================\n",
        "\n",
        "tasks = {\n",
        "    \"Очистити базу\": \"очікує\",\n",
        "    \"Підключити API\": \"в процесі\",\n",
        "    \"Оновити інтерфейс\": \"виконано\"\n",
        "}\n",
        "\n",
        "def add_task(name, status=\"очікує\"):\n",
        "    tasks[name] = status\n",
        "\n",
        "def remove_task(name):\n",
        "    if name in tasks:\n",
        "        del tasks[name]\n",
        "\n",
        "def update_task_status(name, status):\n",
        "    if name in tasks:\n",
        "        tasks[name] = status\n",
        "\n",
        "def get_pending_tasks():\n",
        "    pending = [name for name, status in tasks.items() if status == \"очікує\"]\n",
        "    print(\"\\n[4] Задачі зі статусом 'очікує':\")\n",
        "    print(pending)\n",
        "    return pending\n",
        "\n",
        "\n",
        "# ================================\n",
        "# 5. Аутентифікація користувачів\n",
        "# ================================\n",
        "\n",
        "users = {}  # логін -> {\"password\": ХЕШ, \"name\": ПІБ}\n",
        "\n",
        "def hash_password(password):\n",
        "    return hashlib.md5(password.encode()).hexdigest()\n",
        "\n",
        "def register_user(username, password, full_name):\n",
        "    if username in users:\n",
        "        print(\"Користувач вже існує.\")\n",
        "    else:\n",
        "        users[username] = {\n",
        "            \"password\": hash_password(password),\n",
        "            \"name\": full_name\n",
        "        }\n",
        "        print(f\"\\n[5] Користувача '{username}' зареєстровано.\")\n",
        "\n",
        "def authenticate_user(username, password):\n",
        "    hashed = hash_password(password)\n",
        "    user = users.get(username)\n",
        "    if user and user[\"password\"] == hashed:\n",
        "        print(f\"\\nАутентифікація успішна. Ласкаво просимо, {user['name']}!\")\n",
        "    else:\n",
        "        print(\"\\nНевірний логін або пароль.\")\n",
        "\n",
        "# ================================\n",
        "# Тестування всіх функцій\n",
        "# ================================\n",
        "\n",
        "# 1. Робота з текстом\n",
        "text_input = \"Python — це мова програмування. Python легка у вивченні. Мова Python потужна. Python — це круто. Python назавжди!\"\n",
        "word_count(text_input)\n",
        "\n",
        "# 2. Інвентаризація\n",
        "add_product(\"кефір\", 2)\n",
        "remove_product(\"банан\")\n",
        "low_stock_products()\n",
        "\n",
        "# 3. Продажі\n",
        "revenue = calculate_total_revenue(sales)\n",
        "high_revenue_products(revenue)\n",
        "\n",
        "# 4. Задачі\n",
        "add_task(\"Написати документацію\")\n",
        "update_task_status(\"Очистити базу\", \"виконано\")\n",
        "get_pending_tasks()\n",
        "\n",
        "# 5. Користувачі\n",
        "register_user(\"ivan123\", \"my_secure_pass\", \"Іван Петренко\")\n",
        "authenticate_user(\"ivan123\", \"my_secure_pass\")\n",
        "authenticate_user(\"ivan123\", \"wrong_pass\")\n",
        "\n"
      ]
    }
  ]
}